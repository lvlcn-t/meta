name: Test, Lint and Scan

on:
  workflow_call:
    inputs:
      go_version_file:
        description: Go version to use from go.mod
        type: string
        required: false
        default: go.mod
      golangci_config:
        description: Path to the golangci config file
        type: string
        required: false
        default: .golangci.yml
      private_go_server:
        description: URL of the private Go server
        type: string
        required: false

      python_version:
        description: Python version to use
        type: string
        required: false
      use_pipenv:
        description: Whether to use pipenv
        type: boolean
        required: false
        default: false

      before_tests:
        description: Commands to run before tests
        type: string
        required: false
      additional_args:
        description: Additional parameters to pass to the test command
        type: string
        required: false
    secrets:
      PRIVATE_GO_SERVER_TOKEN:
        description: Token for the private Go server
        required: false

jobs:
  go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Scan Go
        if: hashFiles('**/*.go') != ''
        uses: lvlcn-t/meta/.github/actions/sast-go.yml@main

      - name: Lint Go
        if: hashFiles('**/*.go') != ''
        uses: lvlcn-t/meta/.github/actions/lint-go.yml@main
        with:
          golangci_config: ${{ github.event.inputs.golangci_config }}

      - name: Test Go
        if: hashFiles('**/*.go') != ''
        uses: lvlcn-t/meta/.github/actions/test-go.yml@main
        with:
          go_version_file: ${{ github.event.inputs.go_version_file }}
          private_go_server: ${{ github.event.inputs.private_go_server }}
          before_tests: ${{ github.event.inputs.before_tests }}
          additional_args: ${{ github.event.inputs.additional_args }}
        env:
          PRIVATE_GO_SERVER_TOKEN: ${{ secrets.PRIVATE_GO_SERVER_TOKEN }}

  python:
    runs-on: ubuntu-latest
    if: github.event.inputs.python_version != null
    steps:
      - uses: actions/checkout@v4
      # TODO: Uncomment when the actions are ready
      # - name: Lint Python
      #   if: hashFiles('**/*.py') != ''
      #   uses: lvlcn-t/meta/.github/actions/lint-python.yml@main
      #   with:
      #     use_pipenv: "${{ github.event.inputs.use_pipenv }}"

      # - name: Scan Python
      #   if: hashFiles('**/*.py') != ''
      #   uses: lvlcn-t/meta/.github/actions/scan-python.yml@main

      - name: Test Python
        if: hashFiles('**/*.py') != ''
        uses: lvlcn-t/meta/.github/actions/test-python.yml@main
        with:
          python_version: ${{ github.event.inputs.python_version }}
          use_pipenv: "${{ github.event.inputs.use_pipenv }}"
          before_tests: ${{ github.event.inputs.before_tests }}
          additional_args: ${{ github.event.inputs.additional_args }}
